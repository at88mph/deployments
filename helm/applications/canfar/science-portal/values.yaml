# Default values for science-portal.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  # Hostname to use for all ingress routes (if not set, each service will use its own hostname setting)
  hostname: ""

  # This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
  replicaCount: 1
  imagePullSecrets: []
  imagePullPolicy: IfNotPresent

  # Set the Registry URL pointing to the desired registry containing IVOA compliant services to lookup.
  # Example:
  #   registryURL: https://example.org/reg
  registryURL: ""

  # URI or URL of the OIDC (IAM) server.  Used to validate incoming tokens.
  # Example:
  #   oidcURI: https://iam.example.org
  oidcURI:

  # ID (URI) of the GMS Service.
  # Example:
  #   gmsID: ivo://example.org/gms
  gmsID:

  # Array of groups allowed to set the logging level.  If none set, then nobody can change the log level.
  # Example:
  #   loggingGroups:
  #     - "admin"
  #     - "/roles/prod/ops"
  loggingGroups: []

  # The IdentityManager class handling authentication.  This should generally be left alone unless deployed internally for the CADC.  Required.
  # Example:
  #   identityManagerClass: "org.opencadc.auth.StandardIdentityManager"
  identityManagerClass: "org.opencadc.auth.StandardIdentityManager"

  # This is for setting Kubernetes Annotations to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  podAnnotations: {}
  
  # This is for setting Kubernetes Labels to a Pod.
  # For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  podLabels: {}

  podSecurityContext: {}
    # fsGroup: 2000

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  # The IdentityManager class handling authentication.  This should generally be left alone unless deployed internally for the CADC.  Required.
  # Example:
  #   identityManagerClass: "org.opencadc.auth.StandardIdentityManager"
  identityManagerClass: "org.opencadc.auth.StandardIdentityManager"

  # This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Automatically mount a ServiceAccount's API credentials?
    automount: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  nodeSelector: {}

  tolerations: []

  affinity: {}

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: images.opencadc.org/platform/science-portal
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.1"

# Science Portal application specific values.

# The Resource ID of the Service that contains the URL of the Skaha service in the IVOA Registry
# Example:
#   skahaResourceID: ivo://example.org/skaha
skahaResourceID:

# The Resource ID, or full URL, of the Service that contains the Posix Mapping information.
# Example:
#   posixMapperResourceID: "ivo://example.org/posix-mapper"
#   posixMapperResourceID: "https://example.org/posix-mapper"
posixMapperResourceID: ""

# OIDC (IAM) server configuration.  All values are required if using OIDC authentication.
# oidc:
  # Location of the OpenID Provider (OIdP)
  # uri: https://ska-iam.stfc.ac.uk/
  # The Client ID as listed on the OIdP.
  # clientID: 
  # The Client Secret, which should be generated by the OIdP.
  # clientSecret: 
  # Name of existing secret containing 'clientSecret' key with value of Client Secret, which should be generated by the OIdP.
  # This is an alternative to providing the 'clientSecret' in cleartext in the chart.
  # existingSecretName:
  # Where the OIdP should send the User after successful authentication (redirect_uri)
  # redirectURI:
  # Where to redirect to after the redirectURI callback has completed.  This will usually be the URL to the /science-portal main page.
  # callbackURI: 
  # The standard OpenID scopes for token requests.  This is required.
  # scope: "openid profile offline_access"

# The two tabs to show in the UI.  The first tab contains general public images, and the second tab provides a means
# to launch a User Session using proprietary images.  These are the default lables, but they can be changed here.
# Example:
#   tabLabels:
#     - "Primary"
#     - "Secondary"
tabLabels:
  - "Standard"
  - "Advanced"

# Supported theme name (src or canfar).  Required.
# The "src" values means this Science Portal is deployed on an SRC Net Node.
# The "canfar" value means this Science Portal is deployed on CANFAR.
# Example:
#   themeName: canfar
themeName: ""

# Enable experimental features
experimentalFeatures:
  enabled: false
  # Required. The absolute URL of the /home folder containing the user's home directories.  This is used to query the storage quota information.
  # A typical value would be the /nodes/home endpoint of the Cavern service.
  # Example:
  #   storageHomeURL: https://example.org/cavern/nodes/home
  # storageHomeURL:

# For the token caching
redis:
  architecture: 'standalone'
  auth:
    enabled: false
  master:
    persistence:
      enabled: false

# End of Science Portal specific values.

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Expose the service via gateway-api HTTPRoute
# Requires Gateway API resources and suitable controller installed within the cluster
# (see: https://gateway-api.sigs.k8s.io/guides/)
httpRoute:
  # HTTPRoute enabled.
  enabled: false
  # HTTPRoute annotations.
  annotations: {}
  # Which Gateways this Route is attached to.
  parentRefs:
  - name: gateway
    sectionName: http
    # namespace: default
  # Hostnames matching HTTP header.
  hostnames:
  - chart-example.local
  # List of rules and filters applied.
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /headers
  #   filters:
  #   - type: RequestHeaderModifier
  #     requestHeaderModifier:
  #       set:
  #       - name: My-Overwrite-Header
  #         value: this-is-the-only-value
  #       remove:
  #       - User-Agent
  # - matches:
  #   - path:
  #       type: PathPrefix
  #       value: /echo
  #     headers:
  #     - name: version
  #       value: v2

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# Example:
#   livenessProbe:
#     httpGet:
#       path: /cavern/availability
#       port: http
livenessProbe: {}

# Example:
#   readinessProbe:
#     httpGet:
#       path: /cavern/availability
#       port: http
readinessProbe: {}

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true
