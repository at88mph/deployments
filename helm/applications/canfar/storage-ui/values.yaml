# Default values for storage-ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  hostname:

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: images.opencadc.org/client/storage-ui
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.4.1"

# Storage UI application specific values.

# Set the Registry URL pointing to the desired registry containing IVOA compliant services to lookup.
# Example:
#   registryURL: https://example.org/reg
registryURL: ""

# The Resource ID, or full URL, of the Service that contains the Posix Mapping information.
# Example:
#   posixMapperResourceID: "ivo://example.org/posix-mapper"
#   posixMapperResourceID: "https://example.org/posix-mapper"
posixMapperResourceID: ""

# URI or URL of the OIDC (IAM) server.  Used to validate incoming tokens.  Required if using OIDC authentication.
# This should be a valid HTTPS URL that matches the Identity Provider's issuer URL.
# Example:
#   oidcURI: "https://ska-iam.stfc.ac.uk/"
oidcURI: ""

# ID (URI) of the GMS Service.  URLs are not supported.  Required for accessing GMS user information.
# Example:
#   gmsID: "ivo://skao.int/gms"
gmsID: ""

# Array of groups allowed to set the logging level.  If none set, then nobody can change the log level.
# Example:
#   loggingGroups:
#     - "admin"
#     - "/roles/prod/ops"
loggingGroups: []

# OIDC (IAM) server configuration.  All values are required if using OIDC authentication.
# oidc:
  # Location of the OpenID Provider (OIdP)
  # uri: https://ska-iam.stfc.ac.uk/
  # The Client ID as listed on the OIdP.
  # clientID: 
  # The Client Secret, which should be generated by the OIdP.
  # clientSecret: 
  # Name of existing secret containing 'clientSecret' key with value of Client Secret, which should be generated by the OIdP.
  # This is an alternative to providing the 'clientSecret' in cleartext in the chart.
  # existingSecretName:
  # Where the OIdP should send the User after successful authentication (redirect_uri)
  # redirectURI:
  # Where to redirect to after the redirectURI callback has completed.  This will usually be the URL to the /science-portal main page.
  # callbackURI: 
  # The standard OpenID scopes for token requests.  This is required.
  # scope: "openid profile offline_access"

# The IdentityManager class handling authentication.  This should generally be left alone
# If using OIDC authentication, this should be set to org.opencadc.auth.StandardIdentityManager
identityManagerClass: org.opencadc.auth.StandardIdentityManager

# Dictionary of all VOSpace APIs (Services) available that will be visible on the UI.  Required.
# Example:
#   backend:
#     defaultService: cavern
#     services:
#       cavern:
#         resourceID: "ivo://cadc.nrc.ca/arc"
#         nodeURIPrefix: "vos://cadc.nrc.ca~arc"
#         userHomeDir: "/home"
#
#         # URL to a UI to manage groups.  Used to display in the "Manage Groups" link in the UI.
#         groupManagementURI: "https://ska-aim.stfc.ac.uk/"
#
#         features:
#           batchDownload: false
#           externalLinks: false
#           paging: false
#           directDownload: false
backend: {}

# Supported theme name (src or canfar).  Required.
# The "src" values means this Science Portal is deployed on an SRC Net Node.
# The "canfar" value means this Science Portal is deployed on CANFAR.
# Example:
#   themeName: canfar
themeName: ""

# For the token caching
redis:
  architecture: 'standalone'
  auth:
    enabled: false
  master:
    persistence:
      enabled: false

# End Storage UI application specific values.

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 80

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Expose the service via gateway-api HTTPRoute
# Requires Gateway API resources and suitable controller installed within the cluster
# (see: https://gateway-api.sigs.k8s.io/guides/)
httpRoute:
  # HTTPRoute enabled.
  enabled: false
  # HTTPRoute annotations.
  annotations: {}
  # Which Gateways this Route is attached to.
  parentRefs:
  - name: gateway
    sectionName: http
    # namespace: default
  # Hostnames matching HTTP header.
  hostnames:
  - chart-example.local
  # List of rules and filters applied.
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /headers
  #   filters:
  #   - type: RequestHeaderModifier
  #     requestHeaderModifier:
  #       set:
  #       - name: My-Overwrite-Header
  #         value: this-is-the-only-value
  #       remove:
  #       - User-Agent
  # - matches:
  #   - path:
  #       type: PathPrefix
  #       value: /echo
  #     headers:
  #     - name: version
  #       value: v2

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# Example:
#   livenessProbe:
#     httpGet:
#       path: /cavern/availability
#       port: http
livenessProbe: {}

# Example:
#   readinessProbe:
#     httpGet:
#       path: /cavern/availability
#       port: http
readinessProbe: {}

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
