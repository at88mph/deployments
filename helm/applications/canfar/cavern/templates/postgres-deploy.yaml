{{ $releaseName := .Release.Name }}
{{- with required "UWS Database configuration is required." .Values.uwsDatabase }}
{{- if eq .install true }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $releaseName }}-uws-postgres
  namespace: {{ $.Release.Namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ $releaseName }}-uws-postgres
  template:
    metadata:
      labels:
        app: {{ $releaseName }}-uws-postgres
    spec:
      {{- with .podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: postgres
          image: "{{ .image.repository }}:{{ .image.tag | default "latest" }}"
          imagePullPolicy: {{ .image.pullPolicy | default "IfNotPresent" }}
          ports:
            - containerPort: 5432  # Exposes container port
          envFrom:
            - configMapRef:
                name: {{ $releaseName }}-uws-postgres-config
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: postgresinit
            {{- if .storage }}
            - mountPath: /var/lib/postgresql/data
              name: postgresdb
            {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
      # Maintain the same tolerations as the "parent" Cavern API.
      {{- with $.Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        {{- if .storage }}
        - name: postgresdb
          {{- toYaml .storage.spec | nindent 10 }}
        {{- end }}
        - name: postgresinit
          configMap:
            name: {{ $releaseName }}-uws-postgres-init
{{- end }}
{{- end }}
