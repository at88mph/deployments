# Default values for posix-mapper.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: images.opencadc.org/platform/posix-mapper
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.3.2"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# POSIX Mapper specific settings

# How the POSIX Mapper identifies itself.
# This should be a valid IVOA identifier.
# Example: 
#   resourceID: "ivo://example.org/posix-mapper"
resourceID: ""

# Set the Registry URL pointing to the desired registry containing IVOA compliant services to lookup.
# Example:
#   registryURL: https://example.org/reg
registryURL: ""

# URI or URL of the OIDC (IAM) server.  Used to validate incoming tokens.
# Example:
#   oidcURI: https://iam.example.org
oidcURI:

# ID (URI) of the GMS Service.
# Example:
#   gmsID: ivo://example.org/gms
gmsID:

# Array of groups allowed to set the logging level.  If none set, then nobody can change the log level.
# Example:
#   loggingGroups:
#     - "admin"
#     - "/roles/prod/ops"
loggingGroups: []

# The IdentityManager class handling authentication.  This should generally be left alone unless deployed internally for the CADC.  Required.
# Example:
#   identityManagerClass: "org.opencadc.auth.StandardIdentityManager"
identityManagerClass: "org.opencadc.auth.StandardIdentityManager"

# Optional rename of the application from the default "posix-mapper".
# Update the ingress path if you change this!
# Example:
#   applicationName: "my-posix-mapper"
applicationName: ""

# Required minimum UID that can be assigned.  Used to avoid conflicts with existing system UIDs.  Defaults to 10000.
# Example:
#   minUID: 10000
minUID: 10000

# Required minimum GID that can be assigned.  Used to avoid conflicts with existing system GIDs.  Defaults to 900000.
minGID: 900000

# Required.  Database connection information to contain the UID/GID mappings.
# @param postgresql.maxActive - Maximum number of active connections.  Defaults to 8.
# @param postgresql.url - JDBC URL of the PostgreSQL database.  Required.
# @param postgresql.schema - Database schema to use. Required.
# @param postgresql.auth.username - Database username.  Required.
# @param postgresql.auth.password - Database password.  Required.
#
# Example:
# postgresql:
#   maxActive: 8
#   url: jdbc:postgresql://psql.example.org:5432/mapping
#   schema: mapping
#   auth:
#     username: posixmapperuser
#     password: posixmapperpwd
postgresql: {}

# End POSIX Mapper specific settings

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Expose the service via gateway-api HTTPRoute
# Requires Gateway API resources and suitable controller installed within the cluster
# (see: https://gateway-api.sigs.k8s.io/guides/)
httpRoute:
  # HTTPRoute enabled.
  enabled: false
  # HTTPRoute annotations.
  annotations: {}
  # Which Gateways this Route is attached to.
  parentRefs:
  - name: gateway
    sectionName: http
    # namespace: default
  # Hostnames matching HTTP header.
  hostnames:
  - chart-example.local
  # List of rules and filters applied.
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /headers
  #   filters:
  #   - type: RequestHeaderModifier
  #     requestHeaderModifier:
  #       set:
  #       - name: My-Overwrite-Header
  #         value: this-is-the-only-value
  #       remove:
  #       - User-Agent
  # - matches:
  #   - path:
  #       type: PathPrefix
  #       value: /echo
  #     headers:
  #     - name: version
  #       value: v2

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# Example:
#   livenessProbe:
#     httpGet:
#       path: /posix-mapper/availability
#       port: http
livenessProbe: {}

# Example:
#   readinessProbe:
#     httpGet:
#       path: /posix-mapper/availability
#       port: http
readinessProbe: {}

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}
