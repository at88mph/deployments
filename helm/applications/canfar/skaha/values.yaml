# Default values for skaha.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 1

# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  repository: images.opencadc.org/platform/skaha
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.3"

# This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# Skaha configuration settings.

# How cavern identifies itself.
# This should be a valid IVOA identifier.
# Example: 
#   resourceID: "ivo://example.org/cavern"
resourceID: ""

# Set the Registry URL pointing to the desired registry containing IVOA compliant services to lookup.
# Example:
#   registryURL: https://example.org/reg
registryURL: ""

# The Resource ID, or full URL, of the Service that contains the Posix Mapping information.
# Example:
#   posixMapperResourceID: "ivo://example.org/posix-mapper"
#   posixMapperResourceID: "https://example.org/posix-mapper"
posixMapperResourceID: ""

# URI or URL of the OIDC (IAM) server.  Used to validate incoming tokens.  Required if using OIDC authentication.
# This should be a valid HTTPS URL that matches the Identity Provider's issuer URL.
# Example:
#   oidcURI: "https://ska-iam.stfc.ac.uk/"
oidcURI: ""

# ID (URI) of the GMS Service.  URLs are not supported.  Required for accessing GMS user information.
# Example:
#   gmsID: "ivo://skao.int/gms"
gmsID: ""

# Array of groups allowed to set the logging level.  If none set, then nobody can change the log level.
# Example:
#   loggingGroups:
#     - "admin"
#     - "/roles/prod/ops"
loggingGroups: []

# The IdentityManager class handling authentication.  This should generally be left alone unless deployed internally for the CADC.  Required.
# Example:
#   identityManagerClass: "org.opencadc.auth.StandardIdentityManager"
identityManagerClass: "org.opencadc.auth.StandardIdentityManager"

# Optional rename of the application from the default "skaha".
# Update the ingress path if you change this!
# Example:
#   applicationName: "my-skaha"
applicationName: ""

# Cron string for the image caching cron job schedule. Defaults to every half hour.
imageCache:
  refreshSchedule: "*/30 * * * *"
  
# Set the top-level-directory name that gets mounted at the root.
# skahaTld: "/cavern"

# Used when allocating first-time users into the system.
defaultQuotaGB: "10"

# API version that is currently in use for this deployment.  Leave this alone unless you know what you're doing.
# This the version that will show up in the path for the request (e.g. '/skaha/v1/session').
# Example:
#   apiVersion: 'v0'
apiVersion: 'v1'

# Configuration for User Session launching and management.
sessions:
  # List of allowed Image Repository hosts.  These hosts should match the hosts in the User Session images.
  repositoryHosts:
    - "images.canfar.net"

  expirySeconds: "345600"   # Duration, in seconds, until they expire and are shut down.
  maxCount: "3"  # Max number of sessions per user.
  minEphemeralStorage: "20Gi"   # The initial requested amount of ephemeral (local) storage.  Does NOT apply to Desktop sessions.
  maxEphemeralStorage: "200Gi"  # The maximum amount of ephemeral (local) storage to allow a Session to extend to.  Does NOT apply to Desktop sessions.

  persistentVolumeClaimName: "skaha-workload-cavern-pvc"  # The PVC that is mounted into User Sessions at /home and /projects.

  # The image pull policy for User Sessions (applies to ALL types).  This is the default, but can be overridden.  Deafults to Always.
  # @see https://kubernetes.io/docs/concepts/containers/images/#image-pull-policy
  # Example:
  #   imagePullPolicy: IfNotPresent
  imagePullPolicy: Always

  # Optionally configure the Kueue system to handle large workloads.  Configurable per session type (e.g. desktop, notebook, etc.).
  # Leaving this empty will default to submitting Jobs to the base Kubernetes system.
  # Provide a default configuration for all session types, or omit and only configure specific session types.
  # Provided PriorityClass names are "high", "medium", and "low".
  # @see https://kueue.sigs.k8s.io/docs/
  # @see https://github.com/opencadc/deployments/tree/main/configs/kueue
  # Example 1:
  #   # Configure notebook, desktop, and default session types.
  #   kueue:
  #     notebook:
  #       queueName: "notebook-queue"
  #       priorityClass: "medium"
  #     desktop:
  #       queueName: "desktop-queue"
  #       priorityClass: "low"
  #     default:
  #       queueName: "default-queue"
  #       priorityClass: "medium"
  #
  # Example 2:
  #    # Configure contributed session types.  All else will use the bare Kubernetes system.
  #    kueue:
  #      contributed:
  #        queueName: "contributed-queue"
  #        priorityClass: "high"
  #
  # Example 3:
  #    # Configure Kueue for all user session types.
  #    kueue:
  #      default:
  #        queueName: "all-user-sessions-local-queue"
  #        priorityClass: "medium"
  kueue: {}

  # This is a list of tolerations that will be added to the Pod spec of the User Sessions.
  # @see https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  # @see ./README.md#notes-on-tolerations-and-nodeaffinity
  # 
  # Example:
  # tolerations:
  # - key: "key1"
  #   operator: "Equal"
  #   value: "value1"
  #   effect: "NoSchedule"
  # 
  tolerations: []

  # Optionally setup a separate host for User Sessions for Skaha to redirect to.  The HTTPS scheme is assumed.  Defaults to the Skaha hostname.
  # Example:
  #   hostname: myhost.example.org
  # hostname:

  # Optionally set the TLS configiuration that contains the certificate information for the alternate hostname for User Sessions.  This will go into the Traefik IngressRoute spec.
  # @see https://doc.traefik.io/traefik/v2.3/routing/providers/kubernetes-crd/#kind-ingressroute
  # Example:
  #   tls:
  #     secretName: myhost-tls-secret
  tls: {}

  # Declare extra volume mounts in User Sessions.  The "type: parameter in volume section is constant.
  # extraVolumes:
  # - name: example-pvc-name
  #   volume:
  #     type: PVC           # PVC is for Persistant volume claim
  #     name: pvc-name
  #   volumeMount:
  #     mountPath: "/pvc-volume-mount"
  #     subPath: "pvc"
  # - name: example-hostpath-name
  #   volume:
  #     type: HOST_PATH     # HOST_PATH is for host path
  #     hostPath: "/host-path"
  #     hostPathType: Directory
  #   volumeMount:
  #     mountPath: "/host-path"
  #     readOnly: true
  #     mountPropagation: HostToContainer
  # - name: config-map-volume
  #   volume:
  #     type: CONFIG_MAP    # CONFIG_MAP is for config map
  #     name: example-config-map-name
  #     defaultMode: "0777"
  #   volumeMount:
  #     mountPath: "/cmp"
  # - name: secret-volume
  #   volume:
  #     type: SECRET        # SECRET is for secrets
  #     name: example-secret-name
  #     defaultMode: "0777"
  #   volumeMount:
  #     mountPath: "/scrt"

  # When set to 'true' this flag will enable GPU node scheduling.  Don't forget to declare any related GPU configurations, if appropriate, in the nodeAffinity below!
  # gpuEnabled: false

  # Set the YAML that will go into the "affinity.nodeAffinity" stanza for Pod Spec in User Sessions.  This can be used to enable GPU scheduling, for example, 
  # or to control how and where User Session Pods are scheduled.  This can be potentially dangerous unless you know what you are doing.
  # See https://kubernetes.io/docs/tasks/configure-pod-container/assign-pods-nodes-using-node-affinity
  # nodeAffinity: {}

# End Skaha configuration settings.

# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

# This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

# This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080

# This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- Expose the service via gateway-api HTTPRoute
# Requires Gateway API resources and suitable controller installed within the cluster
# (see: https://gateway-api.sigs.k8s.io/guides/)
httpRoute:
  # HTTPRoute enabled.
  enabled: false
  # HTTPRoute annotations.
  annotations: {}
  # Which Gateways this Route is attached to.
  parentRefs:
  - name: gateway
    sectionName: http
    # namespace: default
  # Hostnames matching HTTP header.
  hostnames:
  - chart-example.local
  # List of rules and filters applied.
  rules:
  - matches:
    - path:
        type: PathPrefix
        value: /headers
  #   filters:
  #   - type: RequestHeaderModifier
  #     requestHeaderModifier:
  #       set:
  #       - name: My-Overwrite-Header
  #         value: this-is-the-only-value
  #       remove:
  #       - User-Agent
  # - matches:
  #   - path:
  #       type: PathPrefix
  #       value: /echo
  #     headers:
  #     - name: version
  #       value: v2

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# Example:
#   livenessProbe:
#     httpGet:
#       path: /cavern/availability
#       port: http
livenessProbe: {}

# Example:
#   readinessProbe:
#     httpGet:
#       path: /cavern/availability
#       port: http
readinessProbe: {}

# This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

# For caching images from the Image Repository and for the writing the POSIX Users and Groups to be shared with Job files
redis:
  architecture: 'standalone'
  auth:
    enabled: false
  master:
    persistence:
      enabled: false
    containerSecurityContext:
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      seccompProfile:
        type: RuntimeDefault
      capabilities:
        drop: ["ALL"]