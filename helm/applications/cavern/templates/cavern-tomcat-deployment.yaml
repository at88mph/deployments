{{ $containerPort := 8080 }}
{{ $storageSpecYAML := required "A valid .Values.storage.service.spec is required!" .Values.storage.service.spec }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    run: {{ .Release.Name }}-tomcat
  name: {{ .Release.Name }}-tomcat
  namespace: {{ .Values.skaha.namespace }}
spec:
  replicas: {{ default 1 .Values.replicaCount }}
  selector:
    matchLabels:
      run: {{ .Release.Name }}-tomcat
  template:
    metadata:
      creationTimestamp: null
      labels:
        run: {{ .Release.Name }}-tomcat
    spec:
{{- with .Values.deployment.cavern.nodeAffinity }}
      affinity:
        nodeAffinity:
{{ . | toYaml | indent 10 }}
{{- end }}
      securityContext:
        fsGroup: {{ .Values.deployment.cavern.filesystem.rootOwner.gid | required ".deployment.cavern.filesystem.rootOwner.gid is required" }}
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      containers:
      - image: {{ .Values.deployment.cavern.image }}
        imagePullPolicy: {{ .Values.deployment.cavern.imagePullPolicy }}
        name: {{ .Release.Name }}-tomcat
        resources:
          requests:
            memory: {{ .Values.deployment.cavern.resources.requests.memory }}
            cpu: {{ .Values.deployment.cavern.resources.requests.cpu }}
          limits:
            memory: {{ .Values.deployment.cavern.resources.limits.memory }}
            cpu: {{ .Values.deployment.cavern.resources.limits.cpu }}
        securityContext:
          allowPrivilegeEscalation: false
        {{- with .Values.deployment.cavern.extraEnv }}
        env:
        {{- toYaml . | nindent 8 }}
        {{- end }}
        ports:
        - containerPort: {{ $containerPort }}
          protocol: TCP
        {{- with .Values.deployment.cavern.extraPorts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        volumeMounts:
        - mountPath: "/config"
          name: config-volume
        - mountPath: '{{ .Values.deployment.cavern.filesystem.dataDir | required ".deployment.cavern.filesystem.dataDir is required" }}'
          name: cavern-volume
        {{- with .Values.deployment.cavern.extraVolumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: {{ printf "%s/%s" .Values.deployment.cavern.endpoint "availability" }}
            port: {{ $containerPort }}
          initialDelaySeconds: 15
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: {{ printf "%s/%s" .Values.deployment.cavern.endpoint "availability" }}
            port: {{ $containerPort }}
          initialDelaySeconds: 25
          periodSeconds: 20
{{- with .Values.deployment.extraHosts }}
      hostAliases:
{{- range $extraHost := . }}
        - ip: {{ $extraHost.ip }}
          hostnames:
            - {{ $extraHost.hostname }}
{{- end }}
{{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      priorityClassName: uber-user-preempt-high
      serviceAccountName: skaha
      volumes:
      - name: config-volume
        configMap:
          name: {{ .Release.Name }}-config
      {{- if $storageSpecYAML }}
      - name: cavern-volume
        {{- toYaml $storageSpecYAML | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.cavern.extraVolumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
